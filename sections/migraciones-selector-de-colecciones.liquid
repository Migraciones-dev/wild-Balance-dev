<section
  id="section-{{ section.id }}"
  class="w-full"
  style="
    background-color: {{ section.settings.bg_color }};
    padding-top: {{ section.settings.pt_mobile }}px;
    padding-bottom: {{ section.settings.pb_mobile }}px;
  "
>
  @media (min-width: 1024px) { #section-{{ section.id }} { padding-top: {{ section.settings.pt_desktop }}px !important;
  padding-bottom: {{ section.settings.pb_desktop }}px !important; } }

  /* Estilos para botones de tabs */ .pet-tab-button { transition: all 0.3s ease; min-width: 160px; justify-content:
  center; font-size: 11px; }

  @media (min-width: 1024px) { .pet-tab-button { font-size: 17px; } }

  .pet-tab-button.active { background-color: #5CCC84; color: white; border-color: #5CCC84; }

  .pet-tab-button.active svg { fill: white; }

  .pet-tab-button:not(.active) { background-color: transparent; color: #5CCC84; border-color: #5CCC84; border-width:
  1px; }

  .pet-tab-button:not(.active) svg { fill: #5CCC84; }

  /* Estilos para categorías */ .category-button { transition: all 0.3s ease; cursor: pointer; text-align: center;
  justify-content: center; font-size: 11px; font-weight: 600; }

  @media (min-width: 1024px) { .category-button { font-size: 17px; } }

  .category-button.active { background-color: #5CCC84; color: white; border-color: #5CCC84; }

  .category-button:not(.active) { background-color: transparent; color: #5CCC84; border-color: #5CCC84; border-width:
  1px; }

  /* Carrusel horizontal en móvil */ .categories-scroll::-webkit-scrollbar { display: none; }

  .categories-scroll { scrollbar-width: none; -ms-overflow-style: none; }

  /* Grid de productos */ .products-grid { display: grid; grid-template-columns: repeat(2, 1fr); gap: 16px; }

  @media (min-width: 640px) { .products-grid { grid-template-columns: repeat(3, 1fr); } }

  @media (min-width: 1024px) { .products-grid { grid-template-columns: repeat(4, 1fr); gap: 24px; } }

  /* Ancho máximo del título en desktop */ @media (min-width: 1024px) { .title-container { max-width: 400px; } }

  <div class="max-w-[1600px] mx-auto px-6 lg:px-10">
    {%- comment -%} MÓVIL: Título arriba {%- endcomment -%}
    <div class="lg:hidden text-center mb-6">
      <h2 class="[font-family:'Barlow',Helvetica] font-extrabold text-[30px] sm:text-[38px] leading-[1] text-[{{ section.settings.title_color }}]">
        {{ section.settings.heading_before }}
        {% if section.settings.heading_highlight != blank %}
          <span class="highlight">{{ section.settings.heading_highlight }}</span>
        {% endif %}
        {{ section.settings.heading_after }}
      </h2>
    </div>

    {%- comment -%} MÓVIL: Botones Perro/Gato {%- endcomment -%}
    <div class="lg:hidden flex gap-2 justify-center mb-6">
      <button
        class="pet-tab-button active px-8 py-3 rounded-full border-2 flex items-center gap-2"
        data-pet="dog"
      >
        <svg
          width="24"
          height="21"
          viewBox="0 0 24 21"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          class="fill-current"
        >
          <path d="M23.8783 10.6675L22.1863 1.5994C22.1449 1.37836 22.0588 1.16811 21.9332 0.981591C21.8076 0.795068 21.6452 0.636212 21.4559 0.514791C21.2666 0.39337 21.0545 0.311951 20.8326 0.27554C20.6107 0.23913 20.3837 0.248498 20.1655 0.303068L20.1336 0.312342L14.7216 1.90854H10.0123L4.6003 0.317495L4.56836 0.30822C4.35021 0.25365 4.1232 0.244282 3.90129 0.280692C3.67939 0.317103 3.46728 0.398522 3.278 0.519943C3.08873 0.641364 2.92629 0.800221 2.80068 0.986743C2.67508 1.17327 2.58895 1.38351 2.54761 1.60455L0.855579 10.6675C0.783223 11.0305 0.836932 11.4073 1.00782 11.7356C1.17871 12.0639 1.45655 12.324 1.79537 12.4729C2.01239 12.5723 2.24811 12.6243 2.48681 12.6254C2.77252 12.6252 3.05293 12.5483 3.29882 12.4028V16.7473C3.29882 17.8405 3.73309 18.8889 4.50609 19.6619C5.27909 20.4349 6.32751 20.8692 7.42069 20.8692H17.3132C18.4064 20.8692 19.4548 20.4349 20.2278 19.6619C21.0008 18.8889 21.4351 17.8405 21.4351 16.7473V12.4039C21.6807 12.5492 21.9607 12.626 22.246 12.6264C22.485 12.6258 22.7211 12.5741 22.9385 12.475C23.2777 12.326 23.5559 12.0655 23.7268 11.7368C23.8977 11.4081 23.9512 11.0308 23.8783 10.6675Z" fill="currentColor"/>
        </svg>
        <span class="font-semibold">Perro</span>
      </button>

      <button
        class="pet-tab-button px-8 py-3 rounded-full border-2 flex items-center gap-2"
        data-pet="cat"
      >
        <svg
          width="25"
          height="25"
          viewBox="0 0 25 25"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          class="fill-current"
        >
          <path d="M9.94365 13.6908C9.94365 13.9142 9.87742 14.1325 9.75334 14.3182C9.62926 14.5039 9.4529 14.6486 9.24656 14.7341C9.04022 14.8196 8.81318 14.8419 8.59413 14.7984C8.37508 14.7548 8.17387 14.6472 8.01595 14.4893C7.85803 14.3314 7.75048 14.1302 7.70691 13.9111C7.66334 13.6921 7.6857 13.465 7.77117 13.2587C7.85663 13.0524 8.00137 12.876 8.18707 12.7519C8.37277 12.6278 8.59109 12.5616 8.81443 12.5616C9.11392 12.5616 9.40114 12.6806 9.61291 12.8924C9.82468 13.1041 9.94365 13.3913 9.94365 13.6908ZM17.0954 12.5616C16.872 12.5616 16.6537 12.6278 16.468 12.7519C16.2823 12.876 16.1376 13.0524 16.0521 13.2587C15.9666 13.465 15.9443 13.6921 15.9878 13.9111C16.0314 14.1302 16.139 14.3314 16.2969 14.4893C16.4548 14.6472 16.656 14.7548 16.8751 14.7984C17.0941 14.8419 17.3212 14.8196 17.5275 14.7341C17.7338 14.6486 17.9102 14.5039 18.0343 14.3182C18.1584 14.1325 18.2246 13.9142 18.2246 13.6908C18.2246 13.3913 18.1056 13.1041 17.8938 12.8924C17.6821 12.6806 17.3949 12.5616 17.0954 12.5616ZM22.7415 5.03349V13.3144C22.7415 18.2952 18.3516 22.3482 12.9549 22.3482C7.55817 22.3482 3.16833 18.2952 3.16833 13.3144V5.03349C3.16847 4.73581 3.25685 4.44485 3.4223 4.19738C3.58775 3.94991 3.82285 3.75703 4.09788 3.64313C4.37291 3.52924 4.67553 3.49942 4.9675 3.55746C5.25947 3.61549 5.52769 3.75878 5.73825 3.9692C5.75142 3.98238 5.76271 3.99461 5.77401 4.00779L7.40291 5.88041C9.06845 4.8369 10.9942 4.28346 12.9596 4.28346C14.925 4.28346 16.8508 4.8369 18.5163 5.88041L20.1358 4.00779C20.1471 3.99461 20.1584 3.98238 20.1715 3.9692C20.3821 3.75878 20.6503 3.61549 20.9423 3.55746C21.2343 3.49942 21.5369 3.52924 21.8119 3.64313C22.087 3.75703 22.322 3.94991 22.4875 4.19738C22.6529 4.44485 22.7413 4.73581 22.7415 5.03349Z" fill="currentColor"/>
        </svg>
        <span class="font-semibold">Gato</span>
      </button>
    </div>

    {%- comment -%} DESKTOP: Header con título y botones {%- endcomment -%}
    <div class="hidden lg:flex lg:items-center lg:justify-between mb-12">
      <div class="title-container">
        <h2
          class="[font-family:'Barlow',Helvetica] font-extrabold text-[57px] xl:text-[64px] leading-[1]"
          style="color: {{ section.settings.title_color }};"
        >
          {{ section.settings.heading_before }}
          {% if section.settings.heading_highlight != blank %}
            <span class="highlight">{{ section.settings.heading_highlight }}</span>
          {% endif %}
          {{ section.settings.heading_after }}
        </h2>
      </div>

      <div class="flex gap-3">
        <button
          class="pet-tab-button active px-12 py-4 rounded-full border-2 flex items-center gap-4 font-semibold"
          data-pet="dog"
        >
          <svg
            width="24"
            height="21"
            viewBox="0 0 24 21"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            class="fill-current"
          >
            <path d="M23.8783 10.6675L22.1863 1.5994C22.1449 1.37836 22.0588 1.16811 21.9332 0.981591C21.8076 0.795068 21.6452 0.636212 21.4559 0.514791C21.2666 0.39337 21.0545 0.311951 20.8326 0.27554C20.6107 0.23913 20.3837 0.248498 20.1655 0.303068L20.1336 0.312342L14.7216 1.90854H10.0123L4.6003 0.317495L4.56836 0.30822C4.35021 0.25365 4.1232 0.244282 3.90129 0.280692C3.67939 0.317103 3.46728 0.398522 3.278 0.519943C3.08873 0.641364 2.92629 0.800221 2.80068 0.986743C2.67508 1.17327 2.58895 1.38351 2.54761 1.60455L0.855579 10.6675C0.783223 11.0305 0.836932 11.4073 1.00782 11.7356C1.17871 12.0639 1.45655 12.324 1.79537 12.4729C2.01239 12.5723 2.24811 12.6243 2.48681 12.6254C2.77252 12.6252 3.05293 12.5483 3.29882 12.4028V16.7473C3.29882 17.8405 3.73309 18.8889 4.50609 19.6619C5.27909 20.4349 6.32751 20.8692 7.42069 20.8692H17.3132C18.4064 20.8692 19.4548 20.4349 20.2278 19.6619C21.0008 18.8889 21.4351 17.8405 21.4351 16.7473V12.4039C21.6807 12.5492 21.9607 12.626 22.246 12.6264C22.485 12.6258 22.7211 12.5741 22.9385 12.475C23.2777 12.326 23.5559 12.0655 23.7268 11.7368C23.8977 11.4081 23.9512 11.0308 23.8783 10.6675Z" fill="currentColor"/>
          </svg>
          <span>Perros</span>
        </button>

        <button
          class="pet-tab-button px-12 py-4 rounded-full border-2 flex items-center gap-4 font-semibold"
          data-pet="cat"
        >
          <svg
            width="25"
            height="25"
            viewBox="0 0 25 25"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            class="fill-current"
          >
            <path d="M9.94365 13.6908C9.94365 13.9142 9.87742 14.1325 9.75334 14.3182C9.62926 14.5039 9.4529 14.6486 9.24656 14.7341C9.04022 14.8196 8.81318 14.8419 8.59413 14.7984C8.37508 14.7548 8.17387 14.6472 8.01595 14.4893C7.85803 14.3314 7.75048 14.1302 7.70691 13.9111C7.66334 13.6921 7.6857 13.465 7.77117 13.2587C7.85663 13.0524 8.00137 12.876 8.18707 12.7519C8.37277 12.6278 8.59109 12.5616 8.81443 12.5616C9.11392 12.5616 9.40114 12.6806 9.61291 12.8924C9.82468 13.1041 9.94365 13.3913 9.94365 13.6908ZM17.0954 12.5616C16.872 12.5616 16.6537 12.6278 16.468 12.7519C16.2823 12.876 16.1376 13.0524 16.0521 13.2587C15.9666 13.465 15.9443 13.6921 15.9878 13.9111C16.0314 14.1302 16.139 14.3314 16.2969 14.4893C16.4548 14.6472 16.656 14.7548 16.8751 14.7984C17.0941 14.8419 17.3212 14.8196 17.5275 14.7341C17.7338 14.6486 17.9102 14.5039 18.0343 14.3182C18.1584 14.1325 18.2246 13.9142 18.2246 13.6908C18.2246 13.3913 18.1056 13.1041 17.8938 12.8924C17.6821 12.6806 17.3949 12.5616 17.0954 12.5616ZM22.7415 5.03349V13.3144C22.7415 18.2952 18.3516 22.3482 12.9549 22.3482C7.55817 22.3482 3.16833 18.2952 3.16833 13.3144V5.03349C3.16847 4.73581 3.25685 4.44485 3.4223 4.19738C3.58775 3.94991 3.82285 3.75703 4.09788 3.64313C4.37291 3.52924 4.67553 3.49942 4.9675 3.55746C5.25947 3.61549 5.52769 3.75878 5.73825 3.9692C5.75142 3.98238 5.76271 3.99461 5.77401 4.00779L7.40291 5.88041C9.06845 4.8369 10.9942 4.28346 12.9596 4.28346C14.925 4.28346 16.8508 4.8369 18.5163 5.88041L20.1358 4.00779C20.1471 3.99461 20.1584 3.98238 20.1715 3.9692C20.3821 3.75878 20.6503 3.61549 20.9423 3.55746C21.2343 3.49942 21.5369 3.52924 21.8119 3.64313C22.087 3.75703 22.322 3.94991 22.4875 4.19738C22.6529 4.44485 22.7413 4.73581 22.7415 5.03349Z" fill="currentColor"/>
          </svg>
          <span>Gatos</span>
        </button>
      </div>
    </div>

    {%- comment -%} Container principal con sidebar y contenido {%- endcomment -%}
    <div class="lg:flex lg:gap-48">
      {%- comment -%} DESKTOP: Sidebar de categorías - GAP aumentado a 12 {%- endcomment -%}
      <div class="hidden lg:block lg:w-96 flex-shrink-0">
        <div class="sticky top-4 space-y-3">
          {% for block in section.blocks %}
            {% if block.type == 'collection' %}
              <button
                class="category-button w-full px-6 py-4 rounded-full border-2  transition-all"
                style="border-color: {{ section.settings.accent_color }};"
                data-pet-type="{{ block.settings.pet_type }}"
                data-collection="{{ block.settings.collection.handle }}"
                {{ block.shopify_attributes }}
              >
                {{ block.settings.collection_name }}
              </button>
            {% endif %}
          {% endfor %}
        </div>
      </div>

      {%- comment -%} Contenido principal {%- endcomment -%}
      <div class="flex-1">
        {%- comment -%} MÓVIL: Carrusel horizontal de categorías {%- endcomment -%}
        <div class="lg:hidden mb-6 categories-scroll flex gap-8 overflow-x-auto pb-2">
          {% for block in section.blocks %}
            {% if block.type == 'collection' %}
              <button
                class="category-button px-8 py-3 rounded-full border-2  whitespace-nowrap flex-shrink-0"
                style="border-color: {{ section.settings.accent_color }}; border:1px solid {{ section.settings.accent_color }};"
                data-pet-type="{{ block.settings.pet_type }}"
                data-collection="{{ block.settings.collection.handle }}"
                {{ block.shopify_attributes }}
              >
                {{ block.settings.collection_name }}
              </button>
            {% endif %}
          {% endfor %}
        </div>

        {%- comment -%} Grid de productos {%- endcomment -%}
        <div id="products-container">
          {% for block in section.blocks %}
            {% if block.type == 'collection' %}
              <div
                class="products-panel hidden"
                data-pet-type="{{ block.settings.pet_type }}"
                data-collection-panel="{{ block.settings.collection.handle }}"
              >
                <div class="products-grid">
                  {% if block.settings.collection != blank %}
                    {% for product in block.settings.collection.products limit: 8 %}
                      {% render 'discount-product-card',
                        product: product,
                        countdown_date: block.settings.countdown_date
                      %}
                    {% endfor %}
                  {% else %}
                    <p class="col-span-full text-center text-gray-500">No hay productos en esta colección</p>
                  {% endif %}
                </div>
              </div>
            {% endif %}
          {% endfor %}
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const petButtons = document.querySelectorAll('[data-pet]');
    const categoryButtons = document.querySelectorAll('[data-collection]');
    const productPanels = document.querySelectorAll('[data-collection-panel]');

    let currentPet = 'dog';
    let currentCollection = null;

    // Función para actualizar tabs de mascotas
    function switchPet(petType) {
      currentPet = petType;

      // Actualizar botones de mascotas
      petButtons.forEach((btn) => {
        if (btn.getAttribute('data-pet') === petType) {
          btn.classList.add('active');
        } else {
          btn.classList.remove('active');
        }
      });

      // Filtrar y mostrar categorías según mascota
      const visibleCategories = [];
      categoryButtons.forEach((btn) => {
        if (btn.getAttribute('data-pet-type') === petType) {
          btn.style.display = '';
          btn.classList.remove('hidden');
          visibleCategories.push(btn);
        } else {
          btn.style.display = 'none';
          btn.classList.add('hidden');
        }
      });

      // Activar la primera categoría visible
      if (visibleCategories.length > 0) {
        const firstCategory = visibleCategories[0];
        const collectionHandle = firstCategory.getAttribute('data-collection');
        switchCollection(collectionHandle);
      }
    }

    // Función para cambiar de colección
    function switchCollection(collectionHandle) {
      currentCollection = collectionHandle;

      // Actualizar botones de categorías
      categoryButtons.forEach((btn) => {
        if (
          btn.getAttribute('data-collection') === collectionHandle &&
          btn.getAttribute('data-pet-type') === currentPet
        ) {
          btn.classList.add('active');
        } else {
          btn.classList.remove('active');
        }
      });

      // Mostrar panel de productos correspondiente
      productPanels.forEach((panel) => {
        if (
          panel.getAttribute('data-collection-panel') === collectionHandle &&
          panel.getAttribute('data-pet-type') === currentPet
        ) {
          panel.classList.remove('hidden');
        } else {
          panel.classList.add('hidden');
        }
      });
    }

    // Event listeners para botones de mascotas
    petButtons.forEach((btn) => {
      btn.addEventListener('click', function () {
        const petType = this.getAttribute('data-pet');
        switchPet(petType);
      });
    });

    // Event listeners para botones de categorías
    categoryButtons.forEach((btn) => {
      btn.addEventListener('click', function () {
        const collectionHandle = this.getAttribute('data-collection');
        switchCollection(collectionHandle);
      });
    });

    // Inicializar con perros
    switchPet('dog');
  });
</script>

{% schema %}
{
  "name": "Descuentos Especiales",
  "settings": [
    {
      "type": "header",
      "content": "Título"
    },
    {
      "type": "text",
      "id": "heading_before",
      "label": "Título (antes del resaltado)",
      "default": "Descuentos"
    },
    {
      "type": "text",
      "id": "heading_highlight",
      "label": "Texto resaltado",
      "default": "especiales"
    },
    {
      "type": "text",
      "id": "heading_after",
      "label": "Título (después del resaltado)"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Color del título",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Colores"
    },
    {
      "type": "color",
      "id": "accent_color",
      "label": "Color accent (categorías)",
      "default": "#004622"
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "Color de fondo de la sección",
      "default": "#FBF5E7"
    },
    {
      "type": "header",
      "content": "Espaciado - Desktop"
    },
    {
      "type": "range",
      "id": "pt_desktop",
      "label": "Padding superior (Desktop)",
      "min": 0,
      "max": 200,
      "step": 4,
      "unit": "px",
      "default": 80
    },
    {
      "type": "range",
      "id": "pb_desktop",
      "label": "Padding inferior (Desktop)",
      "min": 0,
      "max": 200,
      "step": 4,
      "unit": "px",
      "default": 80
    },
    {
      "type": "header",
      "content": "Espaciado - Móvil"
    },
    {
      "type": "range",
      "id": "pt_mobile",
      "label": "Padding superior (Móvil)",
      "min": 0,
      "max": 200,
      "step": 4,
      "unit": "px",
      "default": 40
    },
    {
      "type": "range",
      "id": "pb_mobile",
      "label": "Padding inferior (Móvil)",
      "min": 0,
      "max": 200,
      "step": 4,
      "unit": "px",
      "default": 40
    }
  ],
  "blocks": [
    {
      "type": "collection",
      "name": "Colección",
      "settings": [
        {
          "type": "text",
          "id": "countdown_date",
          "label": "⏱️ Fecha y hora de fin de cuenta atrás",
          "placeholder": "2025-12-20 23:00",
          "info": "Formato: YYYY-MM-DD HH:MM. Se aplicará a todos los productos de esta colección"
        },
        {
          "type": "select",
          "id": "pet_type",
          "label": "Tipo de mascota",
          "options": [
            {
              "value": "dog",
              "label": "Perro"
            },
            {
              "value": "cat",
              "label": "Gato"
            }
          ],
          "default": "dog"
        },
        {
          "type": "text",
          "id": "collection_name",
          "label": "Nombre de la categoría",
          "default": "Dieta BARF"
        },
        {
          "type": "collection",
          "id": "collection",
          "label": "Colección"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Descuentos Especiales",
      "blocks": [
        {
          "type": "collection",
          "settings": {
            "pet_type": "dog",
            "collection_name": "Dieta BARF"
          }
        },
        {
          "type": "collection",
          "settings": {
            "pet_type": "dog",
            "collection_name": "Comida Cocinada"
          }
        },
        {
          "type": "collection",
          "settings": {
            "pet_type": "cat",
            "collection_name": "Dieta BARF"
          }
        }
      ]
    }
  ]
}
{% endschema %}

<script>
  // Countdown timers para product cards
  function initProductCountdowns() {
    const countdownBadges = document.querySelectorAll('[data-countdown-end]');

    countdownBadges.forEach((badge) => {
      const endDateStr = badge.getAttribute('data-countdown-end');
      if (!endDateStr) return;

      const endDate = new Date(endDateStr + ':00').getTime();

      function updateCountdown() {
        const now = new Date().getTime();
        const distance = endDate - now;

        if (distance < 0) {
          badge.textContent = '00:00:00';
          return;
        }

        const totalHours = Math.floor(distance / (1000 * 60 * 60));
        const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((distance % (1000 * 60)) / 1000);

        const hoursStr = totalHours.toString().padStart(2, '0');
        const minutesStr = minutes.toString().padStart(2, '0');
        const secondsStr = seconds.toString().padStart(2, '0');

        badge.textContent = `${hoursStr}:${minutesStr}:${secondsStr}`;
      }

      updateCountdown();
      setInterval(updateCountdown, 1000);
    });
  }

  // Add to cart functionality
  function initAddToCart() {
    const addToCartButtons = document.querySelectorAll('.add-to-cart-btn');

    addToCartButtons.forEach((button) => {
      button.addEventListener('click', function (e) {
        e.preventDefault();
        e.stopPropagation();

        const hasVariants = this.getAttribute('data-has-variants') === 'true';

        if (hasVariants) {
          // Producto con variantes - el data-action-quickview abrirá el modal del tema
          return;
        }

        // Producto sin variantes - añadir directamente al carrito
        const variantId = this.getAttribute('data-variant-id');
        const productAvailable = this.getAttribute('data-product-available') === 'true';

        if (!productAvailable) {
          console.log('Producto no disponible');
          return;
        }

        const formData = {
          items: [
            {
              id: variantId,
              quantity: 1,
            },
          ],
        };

        // Añadir al carrito
        fetch(window.Shopify.routes.root + 'cart/add.js', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            Accept: 'application/json',
          },
          body: JSON.stringify(formData),
        })
          .then((response) => response.json())
          .then((data) => {
            console.log('Producto añadido:', data);

            // Disparar evento de actualización
            document.dispatchEvent(new CustomEvent('cart:refresh'));

            // Abrir el drawer del carrito
            setTimeout(() => {
              const cartButton = document.querySelector('[data-drawer-options*="t4s-mini_cart"]');
              if (cartButton) {
                cartButton.click();
              }
            }, 100);
          })
          .catch((error) => {
            console.error('Error añadiendo al carrito:', error);
          });
      });
    });
  }

  // Reinicializar cuando cambian de tab
  const petButtons = document.querySelectorAll('[data-pet]');
  const categoryButtons = document.querySelectorAll('[data-collection]');

  petButtons.forEach((btn) => {
    btn.addEventListener('click', function () {
      setTimeout(() => {
        initProductCountdowns();
        initAddToCart();
      }, 100);
    });
  });

  categoryButtons.forEach((btn) => {
    btn.addEventListener('click', function () {
      setTimeout(() => {
        initProductCountdowns();
        initAddToCart();
      }, 100);
    });
  });

  // Inicializar al cargar
  initProductCountdowns();
  initAddToCart();
</script>
