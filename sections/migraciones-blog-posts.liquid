{% comment %}
  Sección: Posts manuales con slider en desktop (3 visibles) y grid en mobile.
{% endcomment %}
<section
  id="section-{{ section.id }}"
  class="w-full"
  style="
    background-color: {{ section.settings.bg_color }};
    padding-top: {{ section.settings.pt_mobile }}px;
    padding-bottom: {{ section.settings.pb_mobile }}px;
  "
>
  <style>
    @media (min-width: 768px) {
      #section-{{ section.id }} {
        padding-top: {{ section.settings.pt_desktop }}px !important;
        padding-bottom: {{ section.settings.pb_desktop }}px !important;
      }
    }
    /* === Flechas === */
    #section-{{ section.id }} .nav-btn {
      width: 40px; height: 40px; border-radius: 9999px;
      display: inline-flex; align-items: center; justify-content: center;
      border: 1px solid #004623; color: #004623; background: transparent;
      transition: background-color .2s ease, color .2s ease, opacity .2s ease;
    }
    #section-{{ section.id }} .nav-btn:hover { background: #004623; color: #fff; }
    #section-{{ section.id }} .nav-btn[disabled] { opacity: .35; pointer-events: none; }

    /* === Layout responsive === */
    #section-{{ section.id }} .viewport { width: 100%; overflow: hidden; }
    #section-{{ section.id }} .track {
      gap: var(--gap, 40px);
      transition: transform .35s ease;
    }
    /* Desktop: slider (3 por vista, sin cortes) */
    @media (min-width: 1024px) {
      #section-{{ section.id }} .track { display: flex; flex-wrap: nowrap; }
      #section-{{ section.id }} .card {
        flex: 0 0 calc((100% - (2 * var(--gap, 40px))) / 3);
      }
    }
    /* Tablet/Móvil: grid sin slider */
    @media (max-width: 1023px) {
      #section-{{ section.id }} .track {
        display: grid;
        grid-template-columns: repeat(2, minmax(0, 1fr));
      }
    }
    @media (max-width: 767px) {
      #section-{{ section.id }} .track {
        grid-template-columns: 1fr;
      }
    }
  </style>

  {%- assign use_boxed = section.settings.boxed -%}
  {%- if use_boxed -%}<div class="t4s-container">{%- endif -%}

  {%- comment -%} Heading + Flechas (flechas solo en desktop) {%- endcomment -%}
  <div class="flex items-center justify-between gap-6 mb-10">
    <h2 class="[font-family:'Barlow',Helvetica] !font-extrabold text-[#004623] text-[30px] lg:text-[48px]">
      {{ section.settings.heading }}
    </h2>
    <div class="hidden lg:flex items-center gap-3">
      <button type="button" class="nav-btn prev-btn" aria-label="Anterior">
        <svg width="18" height="18" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
          <path d="M15.41 7.41 14 6l-6 6 6 6 1.41-1.41L10.83 12z"/>
        </svg>
      </button>
      <button type="button" class="nav-btn next-btn" aria-label="Siguiente">
        <svg width="18" height="18" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
          <path d="M8.59 16.59 10 18l6-6-6-6-1.41 1.41L13.17 12z"/>
        </svg>
      </button>
    </div>
  </div>

  {%- comment -%} Mapear gap a px para la variable --gap {%- endcomment -%}
  {%- case section.settings.gap -%}
    {%- when 'sm' -%}
      {% assign gap_px = 24 %}
    {%- when 'md' -%}
      {% assign gap_px = 40 %}
    {%- when 'lg' -%}
      {% assign gap_px = 48 %}
    {%- else -%}
      {% assign gap_px = 40 %}
  {%- endcase -%}

  <div class="viewport" style="--gap: {{ gap_px }}px;">
    <div class="track">
      {%- for block in section.blocks -%}
        {%- assign a = block.settings.article -%}
        {%- if a != blank -%}
          <article class="card border border-gray-200 relative bg-white rounded-[10px] overflow-hidden">
            <a href="{{ a.url }}" class="block w-full">
              {%- if a.image -%}
                <img
                  src="{{ a.image | image_url: width: 1400 }}"
                  alt="{{ a.title | escape }}"
                  loading="lazy"
                  class="w-full h-full object-cover lg:aspect-[3/2]"
                  style="border-radius: {{ section.settings.image_radius }}px;"
                >
              {%- else -%}
                <div
                  class="w-full bg-gray-100 lg:aspect-[3/2]"
                  style="border-radius: {{ section.settings.image_radius }}px;"
                ></div>
              {%- endif -%}
            </a>

            <div class="flex flex-col gap-5 p-5 sm:p-6">
              <div class="flex items-center justify-between flex-wrap gap-4">
                <span class="inline-flex items-center px-4 py-2 rounded-full bg-[#004623] text-white font-semibold text-[13px] lg:text-[14px] leading-[1]">
                  {{ a.tags | first | default: a.blog.title }}
                </span>
                {%- if section.settings.show_date -%}
                  <time class="text-sm text-[#7f7d7b]">
                    {{ a.published_at | date: '%d %b %Y' }}
                  </time>
                {%- endif -%}
              </div>

              <h3 class="!font-bold text-[#004623] [font-family:'Barlow',Helvetica] text-[18px] lg:text-[22px] leading-tight">
                <a href="{{ a.url }}" class="hover:underline">{{ a.title }}</a>
              </h3>

              {%- if section.settings.show_excerpt -%}
                <p class="text-[#004623] leading-relaxed">
                  {{ a.excerpt_or_content | strip_html | truncate: 150 }}
                </p>
              {%- endif -%}

              <a
                href="{{ a.url }}"
                class="inline-flex w-max items-center justify-center px-8 py-3 rounded-full bg-[#ffcd00] text-[#004623] text-[15px] font-semibold hover:opacity-90 mt-2"
              >
                {{ section.settings.button_label }}
              </a>
            </div>
          </article>
        {%- endif -%}
      {%- endfor -%}
    </div>
  </div>

  {%- if use_boxed -%}</div>{%- endif -%}

  <script>
    (function () {
      const root = document.getElementById('section-{{ section.id }}');
      if (!root) return;

      const viewport = root.querySelector('.viewport');
      const track = root.querySelector('.track');
      const prev = root.querySelector('.prev-btn');
      const next = root.querySelector('.next-btn');

      if (!viewport || !track || !prev || !next) return;

      let page = 0;

      function isDesktop() {
        return window.matchMedia('(min-width: 1024px)').matches;
      }

      function totalPages() {
        const items = track.querySelectorAll('.card').length;
        const perPage = 3;
        return Math.max(1, Math.ceil(items / perPage));
      }

      function goTo(p) {
        page = Math.max(0, Math.min(p, totalPages() - 1));
        if (isDesktop()) {
          const w = viewport.clientWidth; // ancho visible = ancho de una "página" (3 cards + 2 gaps)
          track.style.transform = 'translateX(' + -page * w + 'px)';
        } else {
          track.style.transform = 'none';
        }
        updateButtons();
      }

      function updateButtons() {
        const max = totalPages() - 1;
        if (isDesktop()) {
          prev.disabled = page <= 0;
          next.disabled = page >= max;
        } else {
          prev.disabled = true;
          next.disabled = true;
        }
      }

      prev.addEventListener('click', () => goTo(page - 1));
      next.addEventListener('click', () => goTo(page + 1));

      // Reset al cambiar de tamaño
      let rAF;
      function onResize() {
        cancelAnimationFrame(rAF);
        rAF = requestAnimationFrame(() => {
          // Al pasar a desktop, recalcular para no cortar
          if (!isDesktop()) {
            track.style.transform = 'none';
          }
          goTo(0);
        });
      }
      window.addEventListener('resize', onResize);

      // Init
      goTo(0);
    })();
  </script>
</section>

{% schema %}
{
  "name": "Posts manuales",
  "tag": "section",
  "class": "t4s-section posts-manuales",
  "settings": [
    { "type": "text", "id": "heading", "label": "Título de la sección", "default": "Más populares" },
    { "type": "color", "id": "bg_color", "label": "Color de fondo", "default": "#F4F0E2" },

    { "type": "checkbox", "id": "boxed", "label": "Usar contenedor boxed (t4s-container)", "default": false },

    {
      "type": "range",
      "id": "pt_mobile",
      "label": "Padding superior (móvil)",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "default": 0
    },
    {
      "type": "range",
      "id": "pb_mobile",
      "label": "Padding inferior (móvil)",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "default": 0
    },
    {
      "type": "range",
      "id": "pt_desktop",
      "label": "Padding superior (desktop)",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "default": 0
    },
    {
      "type": "range",
      "id": "pb_desktop",
      "label": "Padding inferior (desktop)",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "default": 0
    },

    {
      "type": "range",
      "id": "image_radius",
      "label": "Radio de borde de la imagen",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "default": 0
    },

    {
      "type": "select",
      "id": "gap",
      "label": "Separación entre cards",
      "default": "md",
      "options": [
        { "value": "sm", "label": "Pequeña" },
        { "value": "md", "label": "Media" },
        { "value": "lg", "label": "Grande" }
      ]
    },

    { "type": "checkbox", "id": "show_date", "label": "Mostrar fecha", "default": true },
    { "type": "checkbox", "id": "show_excerpt", "label": "Mostrar extracto", "default": true },
    { "type": "text", "id": "button_label", "label": "Texto del botón", "default": "Continuar leyendo" }
  ],
  "blocks": [
    {
      "type": "post",
      "name": "Post",
      "limit": 24,
      "settings": [{ "type": "article", "id": "article", "label": "Artículo" }]
    }
  ],
  "presets": [{ "name": "Posts manuales", "blocks": [{ "type": "post" }, { "type": "post" }, { "type": "post" }] }]
}
{% endschema %}
